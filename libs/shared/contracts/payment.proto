syntax = "proto3";

package payment;

service PaymentService {
  rpc InitiatePayment(InitiatePaymentRequest) returns (InitiatePaymentResponse);
  rpc ConfirmPayment(ConfirmPaymentRequest) returns (ConfirmPaymentResponse);
  rpc GetPaymentStatus(GetPaymentStatusRequest) returns (GetPaymentStatusResponse);
  rpc RefundPayment(RefundPaymentRequest) returns (RefundPaymentResponse);
}

message InitiatePaymentRequest {
  string booking_id = 1;
  double amount = 2;
  string currency = 3;
  PaymentProvider provider = 4;
  string customer_phone = 5;
  string customer_email = 6;
  map<string, string> metadata = 7;
}

message InitiatePaymentResponse {
  string payment_id = 1;
  string transaction_id = 2;
  PaymentStatus status = 3;
  string redirect_url = 4;
  string error_message = 5;
}

message ConfirmPaymentRequest {
  string payment_id = 1;
  string transaction_id = 2;
  string provider_reference = 3;
  map<string, string> provider_data = 4;
}

message ConfirmPaymentResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  double amount = 3;
  string error_message = 4;
}

message GetPaymentStatusRequest {
  string payment_id = 1;
}

message GetPaymentStatusResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  double amount = 3;
  string transaction_id = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
}

message RefundPaymentRequest {
  string payment_id = 1;
  double amount = 2;
  string reason = 3;
}

message RefundPaymentResponse {
  string refund_id = 1;
  PaymentStatus status = 2;
  double amount = 3;
  string error_message = 4;
}

enum PaymentProvider {
  BKASH = 0;
  NAGAD = 1;
  SSLCOMMERZ = 2;
}

enum PaymentStatus {
  PENDING = 0;
  PROCESSING = 1;
  COMPLETED = 2;
  FAILED = 3;
  CANCELLED = 4;
  REFUNDED = 5;
}
