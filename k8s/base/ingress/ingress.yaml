apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nx-mono-repo-ingress
  annotations:
    kubernetes.io/ingress.class: 'alb'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/redirect-to-https: 'true'
    alb.ingress.kubernetes.io/certificate-arn: '{{CERTIFICATE_ARN}}'
    alb.ingress.kubernetes.io/ssl-policy: 'ELBSecurityPolicy-TLS-1-2-2017-01'
    alb.ingress.kubernetes.io/healthcheck-path: '/health'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
spec:
  rules:
    - host: api-{{ENVIRONMENT}}.nx-mono-repo.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 80
    - host: app-{{ENVIRONMENT}}.nx-mono-repo.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-console
                port:
                  number: 80
    - host: frontdesk-{{ENVIRONMENT}}.nx-mono-repo.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: front-desk-board
                port:
                  number: 80
    - host: monitoring-{{ENVIRONMENT}}.nx-mono-repo.com
      http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: prometheus-server
                port:
                  number: 80
          - path: /jaeger
            pathType: Prefix
            backend:
              service:
                name: jaeger-query
                port:
                  number: 16686
