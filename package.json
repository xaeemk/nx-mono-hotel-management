{
  "name": "nx-mono-repo",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "build": "nx build",
    "test": "nx test",
    "lint": "echo 'No projects to lint yet. Add projects with: nx generate @nx/react:app my-app'",
    "e2e": "nx e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "prettier --write .",
    "format:write": "prettier --write .",
    "format:check": "prettier --check .",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "prepare": "husky install",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "db:generate": "cd libs/shared/database && npm run db:generate",
    "db:push": "cd libs/shared/database && npm run db:push",
    "db:migrate": "cd libs/shared/database && npm run db:migrate",
    "db:migrate:dev": "cd libs/shared/database && npm run db:migrate:dev",
    "db:migrate:reset": "cd libs/shared/database && npm run db:migrate:reset",
    "db:studio": "cd libs/shared/database && npm run db:studio",
    "db:seed": "cd libs/shared/database && npm run db:seed",
    "db:partition-maintenance": "cd libs/shared/database && tsx scripts/partition-maintenance.ts",
    "gateway:dev": "nx serve api-gateway",
    "gateway:build": "nx build api-gateway",
    "gateway:start": "node dist/apps/api-gateway/main.js",
    "checkin:dev": "nx serve checkin-service",
    "checkin:build": "nx build checkin-service",
    "checkin:start": "node dist/apps/checkin-service/main.js",
    "housekeeping:dev": "npx nx serve housekeeping-mobile",
    "housekeeping:build": "npx nx build housekeeping-mobile",
    "housekeeping:start": "node dist/apps/housekeeping-service/main.js",
    "allocation:dev": "nx serve allocation-service",
    "allocation:build": "nx build allocation-service",
    "allocation:start": "node dist/apps/allocation-service/main.js",
    "phase2:dev": "concurrently \"npm run checkin:dev\" \"npm run housekeeping:dev\" \"npm run allocation:dev\"",
    "phase2:build": "nx build checkin-service && nx build housekeeping-service && nx build allocation-service",
    "phase2:up": "docker-compose -f docker-compose.phase2.yml up",
    "phase2:up:build": "docker-compose -f docker-compose.phase2.yml up --build",
    "phase2:down": "docker-compose -f docker-compose.phase2.yml down",
    "docs:postman": "node scripts/generate-postman-collection.js",
    "docs:all": "npm run docs:postman",
    "gateway:run": "node run-api-gateway.js",
    "admin-console:dev": "npx nx serve admin-console",
    "admin-console:build": "npx nx build admin-console",
    "front-desk:dev": "npx nx serve front-desk-board",
    "front-desk:build": "npx nx build front-desk-board",
    "web-dashboards:dev": "concurrently \"npm run admin-console:dev\" \"npm run front-desk:dev\" \"npm run housekeeping:dev\"",
    "web-dashboards:build": "npm run admin-console:build && npm run front-desk:build && npm run housekeeping:build",
    "pricing-agent:dev": "nx serve pricing-agent",
    "pricing-agent:build": "nx build pricing-agent",
    "pricing-agent:start": "node dist/apps/pricing-agent/main.js",
    "eagle-eye:dev": "nx serve eagle-eye-runner",
    "eagle-eye:build": "nx build eagle-eye-runner",
    "eagle-eye:start": "node dist/apps/eagle-eye-runner/main.js",
    "anomaly-detector:dev": "nx serve anomaly-detector",
    "anomaly-detector:build": "nx build anomaly-detector",
    "anomaly-detector:start": "node dist/apps/anomaly-detector/main.js",
    "phase3:dev": "concurrently \"npm run pricing-agent:dev\" \"npm run eagle-eye:dev\" \"npm run anomaly-detector:dev\"",
    "phase3:build": "nx build pricing-agent && nx build eagle-eye-runner && nx build anomaly-detector",
    "phase3:up": "docker-compose -f docker-compose.phase3.yml up",
    "phase3:up:build": "docker-compose -f docker-compose.phase3.yml up --build",
    "phase3:down": "docker-compose -f docker-compose.phase3.yml down",
    "voice:dev": "nx serve voice-service",
    "voice:build": "nx build voice-service",
    "voice:start": "node dist/apps/voice-service/main.js",
    "bi-service:dev": "nx serve bi-service",
    "bi-service:build": "nx build bi-service",
    "bi-service:start": "node dist/apps/bi-service/main.js",
    "notification-service:dev": "nx serve notification-service",
    "notification-service:build": "nx build notification-service",
    "notification-service:start": "node dist/apps/notification-service/main.js",
    "phase4:dev": "concurrently \"npm run voice:dev\" \"npm run bi-service:dev\" \"npm run notification-service:dev\"",
    "phase4:build": "nx build voice-service && nx build bi-service && nx build notification-service",
    "phase4:up": "docker-compose -f docker-compose.phase4.yml up",
    "phase4:up:build": "docker-compose -f docker-compose.phase4.yml up --build",
    "phase4:down": "docker-compose -f docker-compose.phase4.yml down",
    "test:unit": "nx run-many --target=test --all",
    "test:api": "jest --testPathPattern=api-tests",
    "test:e2e": "nx run-many --target=e2e --all",
    "test:load": "k6 run tests/load/**/*.js",
    "test:mutation": "stryker run",
    "test:contract": "jest --testPathPattern=contract-tests",
    "test:all": "npm run test:unit && npm run test:api && npm run test:contract",
    "test:ci": "npm run test:unit && npm run test:api && npm run test:e2e && npm run test:mutation"
  },
  "private": true,
  "devDependencies": {
    "@nx/cypress": "^17.2.8",
    "@nx/devkit": "^17.2.8",
    "@nx/eslint-plugin": "^17.2.8",
    "@nx/jest": "^17.2.8",
    "@nx/js": "^17.3.2",
    "@nx/linter": "^17.2.8",
    "@nx/next": "^21.3.11",
    "@nx/node": "^17.3.2",
    "@nx/react": "^17.2.8",
    "@nx/workspace": "^17.2.8",
    "@pact-foundation/pact": "^12.1.0",
    "@pact-foundation/pact-node": "^10.17.7",
    "@stryker-mutator/core": "^7.3.0",
    "@stryker-mutator/jest-runner": "^7.3.0",
    "@stryker-mutator/typescript-checker": "^7.3.0",
    "@swc/core": "^1.13.3",
    "@swc/jest": "^0.2.39",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.4.0",
    "@types/morgan": "^1.9.9",
    "@types/node": "~18.16.9",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-jwt": "^3.0.13",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.10.9",
    "@types/qrcode": "^1.5.5",
    "@types/supertest": "^6.0.2",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.18.1",
    "@types/yamljs": "^0.2.34",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "concurrently": "^9.2.0",
    "cypress": "^13.6.0",
    "eslint": "~8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "husky": "^8.0.3",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "k6": "^0.0.0",
    "nx": "17.2.8",
    "prettier": "^2.6.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.2.2"
  },
  "dependencies": {
    "@apollo/server": "^4.0.0",
    "@chakra-ui/icons": "^2.2.4",
    "@chakra-ui/react": "^3.24.2",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@nestjs/apollo": "^12.0.0",
    "@nestjs/bull": "^10.0.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/graphql": "^12.0.0",
    "@nestjs/jwt": "^10.0.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^7.0.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^5.0.0",
    "@types/multer": "^1.4.11",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@xstate/graph": "^3.0.4",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.2",
    "bullmq": "^4.15.4",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.3.1",
    "ffmpeg-static": "^5.2.0",
    "form-data": "^4.0.0",
    "framer-motion": "^12.23.12",
    "graphql": "^16.8.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.7.0",
    "mqtt": "^5.14.0",
    "multer": "^1.4.5-lts.1",
    "next": "^15.4.6",
    "next-pwa": "^5.6.0",
    "node-cron": "^3.0.3",
    "nodemailer": "^7.0.5",
    "openai": "^4.28.4",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "qrcode": "^1.5.4",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-icons": "^5.5.0",
    "redis": "^5.8.0",
    "reflect-metadata": "^0.1.13",
    "socket.io-client": "^4.8.1",
    "speakeasy": "^2.0.0",
    "swagger-ui-express": "^5.0.0",
    "swr": "^2.3.5",
    "twilio": "^4.19.3",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "workbox-webpack-plugin": "^7.3.0",
    "ws": "^8.18.3",
    "xstate": "^5.20.2"
  }
}
